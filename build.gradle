plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.sms.stockmanagementsystem'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'org.jetbrains:annotations:15.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.3.1'
    implementation 'org.hsqldb:hsqldb:2.7.1'
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'

}

tasks.register('buildDockerImage') {
    group = 'Docker'
    description = 'Builds docker image and pushes it'

    doLast {
        def imageName = project.findProperty('imageName') ?: "goldenkoopa/${project.name}"
        exec {
            commandLine 'docker', 'build', '-t', imageName, '.'
        }

        exec {
            commandLine 'docker', 'push', imageName
        }

        exec {
            commandLine 'docker', 'image', 'rm', imageName
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
